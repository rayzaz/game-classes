// src/components/assistants/Lumin/LuminQuestionnaire.tsx
import React, { useMemo, useState } from "react";
import "../../../styles.css";

type Props = {
  assistant?: { name: string; title?: string };
  classes: GameClass[];

  // –ø—Ä–∏–ª–µ—Ç–∞–µ—Ç –∏–∑ Portal ‚Äî –º–æ–∂–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
  variant?: any;
  onSpeakingChange?: (v: boolean) => void;

  onCancel?: () => void;
  onFinish?: (data: QuestionnaireData, pickedClass?: GameClass | null) => void;

  initial?: Partial<QuestionnaireData>;
};

export type Spell = {
  name: string;
  castTime: string;  // "1 —Ö–æ–¥"
  radius: string;    // "10 –º"
  effect: string;    // "–æ–∂–æ–≥ / —â–∏—Ç / –ª–µ—á–µ–Ω–∏–µ"
  duration: string;  // "—Ä–∞–∑–æ–≤–æ / 2 —Ö–æ–¥–∞"
};

// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ç–∏–ø –ø–æ–¥ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ src/data/classes.ts
export type GameClass = {
  id?: string | number;
  key?: string;
  name: string;
  role?: string | null;
  roles?: string[] | null;
  tags?: string[] | null;
  // –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∏–∑ —Ç–≤–æ–µ–≥–æ –¥–∞—Ç–∞—Å–µ—Ç–∞
  who?: string;
  complexity?: string;
  strengths?: string;
  weaknesses?: string;
  desc?: string;
  description?: string;
  bestallies?: string;
  counterplay?: string;
  fit?: string;
  image?: string;
};

export type QuestionnaireData = {
  // 1) –±–∞–∑–æ–≤–æ–µ
  name: string;
  age: number; // 13‚Äì15
  suit: "–ö–ª–µ–≤–µ—Ä" | "–ê–ª–º–∞–∑" | "–ü–∏–∫–∏" | "–ß–µ—Ä–≤—ã";
  bio: string;
  race: string;

  // 2) –≤–Ω–µ—à–Ω–æ—Å—Ç—å
  height: string;
  weight: string;
  body: "—Ö—É–¥–æ—â–∞–≤—ã–π" | "—Å—Ä–µ–¥–Ω–∏–π" | "–∫—Ä–µ–ø–∫–∏–π";
  hairColor: string;
  hairLength: string;
  eyes: string;
  marks: string;

  // 3) –º–∞–≥–∏—è
  hasGrimoire: boolean;
  plannedAge?: number | null;
  noviceNote: string;

  // 4) –∫–ª–∞—Å—Å
  classKey: string | null;

  // 5) —Å—Ç–∏—Ö–∏–∏ (1‚Äì4)
  elements: string[];

  // 6) –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è (1‚Äì3)
  spells: Spell[];

  // 7) –ø–æ—è—Å–Ω–µ–Ω–∏—è
  combatNotes: string;

  // 8) —Ñ–æ—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  photo: {
    name: string;
    mime: string;
    size: number;
    dataUrl: string; // base64
  } | null;
};

const SUITS = ["–ö–ª–µ–≤–µ—Ä", "–ê–ª–º–∞–∑", "–ü–∏–∫–∏", "–ß–µ—Ä–≤—ã"] as const;
const BODIES = ["—Ö—É–¥–æ—â–∞–≤—ã–π", "—Å—Ä–µ–¥–Ω–∏–π", "–∫—Ä–µ–ø–∫–∏–π"] as const;
const ELEMENTS = [
  "–≤–æ–¥–∞", "–≤–æ–∑–¥—É—Ö", "–∑–µ–º–ª—è", "–æ–≥–æ–Ω—å",
  "—Å–≤–µ—Ç", "—Ç—å–º–∞", "–∂–∏–∑–Ω—å", "–ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ", "–≤—Ä–µ–º—è", "–¥–∏–∫–∞—è",
];

function toKey(c: GameClass) {
  return String(c.id ?? c.key ?? c.name);
}
function collectRoles(c: GameClass): string[] {
  const bucket: string[] = [];
  if (typeof c.role === "string" && c.role.trim()) bucket.push(c.role);
  if (Array.isArray(c.roles)) bucket.push(...c.roles);
  if (Array.isArray(c.tags)) bucket.push(...c.tags);
  return bucket.map((r) => r.toLowerCase());
}
function isUniversal(c: GameClass) {
  const r = collectRoles(c);
  return r.some((x) => ["—É–Ω–∏–≤–µ—Ä—Å–∞–ª", "—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π", "universal"].includes(x));
}
function rollD100() {
  return Math.floor(Math.random() * 100) + 1;
}

export default function LuminQuestionnaire({
  assistant = { name: "–õ—é–º–∏–Ω" },
  classes,
  onCancel,
  onFinish,
}: Props) {
  const [step, setStep] = useState(1);
  const [data, setData] = useState<QuestionnaireData>({
    // 1) –±–∞–∑–æ–≤–æ–µ
    name: "",
    age: 13,
    suit: "–ö–ª–µ–≤–µ—Ä",
    bio: "",
    race: "—á–µ–ª–æ–≤–µ–∫",

    // 2) –≤–Ω–µ—à–Ω–æ—Å—Ç—å
    height: "",
    weight: "",
    body: "—Å—Ä–µ–¥–Ω–∏–π",
    hairColor: "",
    hairLength: "",
    eyes: "",
    marks: "",

    // 3) –º–∞–≥–∏—è
    hasGrimoire: true,
    plannedAge: null,
    noviceNote:
      "–°—Ç–∞—Ä—Ç–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å ‚Äî –Ω–æ–≤–∏—á–æ–∫. –î–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å—Ç—ã–µ –≤—ã—Å—Ç—Ä–µ–ª—ã –º–∞–Ω—ã.",

    // 4) –∫–ª–∞—Å—Å
    classKey: null,

    // 5) —Å—Ç–∏—Ö–∏–∏
    elements: [],

    // 6) –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è
    spells: [{ name: "", castTime: "", radius: "", effect: "", duration: "" }],

    // 7)
    combatNotes:
      "–í –±–æ—é –≤—Å–µ –±—Ä–æ—Å–∞—é—Ç –∫—É–±—ã; –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø—Ä–∏–±–∞–≤–ª—è—é—Ç—Å—è –±–æ–Ω—É—Å—ã –æ—Ç –∫–ª–∞—Å—Å–∞/–º–∞–≥–∏–∏/–ø—Ä–µ–¥–º–µ—Ç–æ–≤. –≠—Ñ—Ñ–µ–∫—Ç—ã: –æ–∂–æ–≥, –ª–µ—á–µ–Ω–∏–µ, —â–∏—Ç, –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ –∏ —Ç.–¥.",

    // 8) —Ñ–æ—Ç–æ
    photo: null,
  });

  const [errors, setErrors] = useState<Record<string, string>>({});
  const [roll, setRoll] = useState<number | null>(null);
  const [rollError, setRollError] = useState<string | null>(null);
  // –µ–¥–∏–Ω–∏—á–Ω—ã–π –±—Ä–æ—Å–æ–∫ –¥–ª—è ¬´—É–Ω–∏–≤–µ—Ä—Å–∞–ª–∞¬ª
  const [universalRoll, setUniversalRoll] = useState<number | null>(null);

  // —Ñ–æ—Ç–æ (–≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ –ø—Ä–µ–≤—å—é)
  const [photoFile, setPhotoFile] = useState<File | null>(null);
  const [photoDataUrl, setPhotoDataUrl] = useState<string | null>(null);

  const pickedClass = useMemo(
    () => (data.classKey ? classes.find((c) => toKey(c) === data.classKey) ?? null : null),
    [data.classKey, classes]
  );

  const progress = Math.round((step / 8) * 100);

  /** ========== –í–ê–õ–ò–î–ê–¶–ò–Ø ========= */
  const valid1 =
    !!data.name.trim() &&
    data.age >= 13 && data.age <= 15 &&
    SUITS.includes(data.suit);
  const valid2 =
    !!data.height.trim() && !!data.weight.trim() &&
    !!data.hairColor.trim() && !!data.hairLength.trim() && !!data.eyes.trim();
  const valid3 =
    data.hasGrimoire || (data.plannedAge != null && data.plannedAge >= 13 && data.plannedAge <= 15);
  const valid4 = !!data.classKey;
  const valid5 = data.elements.length >= 1 && data.elements.length <= 4;
  const valid6 =
    data.spells.length >= 1 &&
    data.spells.length <= 3 &&
    data.spells.every(
      (s) => s.name.trim() && s.castTime.trim() && s.radius.trim() && s.effect.trim() && s.duration.trim()
    );

  const canNext =
    step === 1 ? valid1 :
    step === 2 ? valid2 :
    step === 3 ? valid3 :
    step === 4 ? valid4 :
    step === 5 ? valid5 :
    step === 6 ? valid6 :
    true; // —à–∞–≥–∏ 7‚Äì8 —Å–≤–æ–±–æ–¥–Ω—ã–µ

  /** ========== UI ========= */
  const Hint: React.FC<{ children: React.ReactNode }> = ({ children }) => (
    <div className="asst-bubble" style={{ marginTop: 8 }}>
      <div className="asst-meta">
        {assistant.name}
        {assistant.title ? ` ¬∑ ${assistant.title}` : ""}
      </div>
      <div className="asst-text">{children}</div>
    </div>
  );

  /** ========== –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò ========= */
  const setField = <K extends keyof QuestionnaireData>(key: K, val: QuestionnaireData[K]) =>
    setData((p) => ({ ...p, [key]: val }));

  const toggleElement = (el: string) =>
    setData((p) => {
      const has = p.elements.includes(el);
      if (has) return { ...p, elements: p.elements.filter((x) => x !== el) };
      if (p.elements.length >= 4) return p;
      return { ...p, elements: [...p.elements, el] };
    });

  const addSpell = () =>
    setData((p) =>
      p.spells.length >= 3
        ? p
        : { ...p, spells: [...p.spells, { name: "", castTime: "", radius: "", effect: "", duration: "" }] }
    );

  const updateSpell = (i: number, patch: Partial<Spell>) =>
    setData((p) => {
      const copy = p.spells.slice();
      copy[i] = { ...copy[i], ...patch };
      return { ...p, spells: copy };
    });

  const removeSpell = (i: number) =>
    setData((p) => {
      if (p.spells.length <= 1) return p;
      const copy = p.spells.slice();
      copy.splice(i, 1);
      return { ...p, spells: copy };
    });

  // –í—ã–±–æ—Ä –∫–ª–∞—Å—Å–∞ + –µ–¥–∏–Ω–∏—á–Ω—ã–π d100 –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª–∞
  const pickClass = (klass: GameClass) => {
    const key = toKey(klass);

    if (isUniversal(klass)) {
      if (universalRoll === null) {
        const r = rollD100();
        setUniversalRoll(r);
        setRoll(r);
        if (r < 80) {
          setRollError(`üé≤ d100 = ${r}. –ù—É–∂–Ω–æ 80‚Äì100. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ —ç—Ç–æ–π –∞–Ω–∫–µ—Ç–µ.`);
          setField("classKey", null);
          return;
        }
        setRollError(null);
        setField("classKey", key);
        return;
      }

      setRoll(universalRoll);
      if (universalRoll < 80) {
        setRollError(`üé≤ d100 = ${universalRoll}. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è —ç—Ç–æ–π –∞–Ω–∫–µ—Ç—ã.`);
        setField("classKey", null);
        return;
      }
      setRollError(null);
      setField("classKey", key);
      return;
    }

    setRoll(null);
    setRollError(null);
    setField("classKey", key);
  };

  // –≤—ã–±–æ—Ä —Ñ–æ—Ç–æ
  function onPickPhoto(e: React.ChangeEvent<HTMLInputElement>) {
    const f = e.target.files?.[0] || null;
    if (!f) {
      setPhotoFile(null);
      setPhotoDataUrl(null);
      setData((d) => ({ ...d, photo: null }));
      return;
    }
    if (!f.type.startsWith("image/")) {
      alert("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (jpg, png –∏ —Ç.–ø.)");
      return;
    }
    if (f.size > 5 * 1024 * 1024) {
      alert("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª. –ú–∞–∫—Å–∏–º—É–º 5 –ú–ë.");
      return;
    }

    const reader = new FileReader();
    reader.onload = () => {
      const url = String(reader.result || "");
      setPhotoFile(f);
      setPhotoDataUrl(url);
      setData((d) => ({
        ...d,
        photo: {
          name: f.name,
          mime: f.type,
          size: f.size,
          dataUrl: url,
        },
      }));
    };
    reader.readAsDataURL(f);
  }

  const submit = () => {
    if (!valid1 || !valid2 || !valid3 || !valid4 || !valid5 || !valid6) {
      const next: Record<string, string> = {};
      if (!valid1) next.step1 = "–ó–∞–ø–æ–ª–Ω–∏ –∏–º—è/–≤–æ–∑—Ä–∞—Å—Ç/—Å—Ç—Ä–∞–Ω—É.";
      if (!valid2) next.step2 = "–ó–∞–ø–æ–ª–Ω–∏ –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥.";
      if (!valid3) next.step3 = "–ü—Ä–æ–≤–µ—Ä—å –±–ª–æ–∫ —Å –≥—Ä–∏–º—É–∞—Ä–æ–º.";
      if (!valid4) next.step4 = "–í—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å (d100 ‚â• 80 –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª–∞).";
      if (!valid5) next.step5 = "–í—ã–±–µ—Ä–∏ –æ—Ç 1 –¥–æ 4 —Å—Ç–∏—Ö–∏–π.";
      if (!valid6) next.step6 = "1‚Äì3 –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è: –≤—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.";
      setErrors(next);
      return;
    }
    onFinish?.(data, pickedClass);
  };

  /** ========== –†–ï–ù–î–ï–† ========= */
  return (
    <div className="portal">
      <div className="portal-title">–ê–Ω–∫–µ—Ç–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ ¬∑ —à–∞–≥ {step} –∏–∑ 8</div>

      <div className="portal-progress">
        <div className="portal-progress-bar" style={{ width: `${progress}%` }} />
        <div className="portal-progress-hint">{progress}%</div>
      </div>

      {/* 1) –ò–º—è/–≤–æ–∑—Ä–∞—Å—Ç/–ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ/–±–∏–æ–≥—Ä–∞—Ñ–∏—è */}
      {step === 1 && (
        <>
          <Hint>
            –ó–∞–ø–æ–ª–Ω–∏–º –ø–µ—Ä–≤—É—é —á–∞—Å—Ç—å –∞–Ω–∫–µ—Ç—ã. –î–ª—è –Ω–∞—á–∞–ª–∞ ‚Äî –∏–º—è. –î–∞–ª—å—à–µ —É–∫–∞–∂–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç: –ø–æ–¥—Ä–æ—Å—Ç–∫–∏ –≤ 13‚Äì15 –ª–µ—Ç –≤—Å–µ–≥–¥–∞ –ø—Ä–æ—Ö–æ–¥—è—Ç —Ü–µ—Ä–µ–º–æ–Ω–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä–∏–º—É–∞—Ä–∞. –¢–µ–ø–µ—Ä—å –º–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è: –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ —á–µ—Ç—ã—Ä—ë—Ö —Å—Ç—Ä–∞–Ω ‚Äî –ö–ª–µ–≤–µ—Ä, –ê–ª–º–∞–∑, –ü–∏–∫–∏ –∏–ª–∏ –ß–µ—Ä–≤—ã. –í–∞–∂–Ω–æ –æ—Ç–º–µ—Ç–∏—Ç—å –∏ –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ: –Ω–∞–ø–∏—à–∏ –æ —Å–≤–æ–µ–π —Å–µ–º—å–µ, —Å–≤–æ—ë–º –ø—É—Ç–∏. –ò–∑ –¥–µ—Ä–µ–≤–Ω–∏ ‚Äî –∑–Ω–∞—á–∏—Ç, —Å–∫—Ä–æ–º–Ω–æ–µ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –∏ —Ä–µ–º—ë—Å–ª–∞. –ò–∑ —Å—Ç–æ–ª–∏—Ü—ã ‚Äî –∑–Ω–∞—á–∏—Ç, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ –∫—É–ª—å—Ç—É—Ä–∞. –ï—Å–ª–∏ –≤ —Ä–æ–¥—É –±—ã–ª–∞ —Ä–µ–¥–∫–∞—è –º–∞–≥–∏—è, –æ–± —ç—Ç–æ–º —Ç–æ–∂–µ —Å—Ç–æ–∏—Ç —É–ø–æ–º—è–Ω—É—Ç—å. –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ç–≤–æ–∏—Ö –∫–æ—Ä–Ω–µ–π.
          </Hint>

          <label className="form-label">–ò–º—è</label>
          <input className="input" placeholder="–í–∞—à–µ –∏–º—è"
            value={data.name} onChange={(e) => setField("name", e.target.value)} autoFocus />

          <div className="grid" style={{ gap: 10, gridTemplateColumns: "1fr 1fr" }}>
            <div>
              <label className="form-label">–í–æ–∑—Ä–∞—Å—Ç (13‚Äì15)</label>
              <input className="input" type="number" min={13} max={15}
                value={data.age} onChange={(e) => setField("age", Number(e.target.value))} />
            </div>
            <div>
              <label className="form-label">–°—Ç—Ä–∞–Ω–∞</label>
              <select className="input" value={data.suit} onChange={(e) => setField("suit", e.target.value as any)}>
                {SUITS.map((s) => <option key={s} value={s}>{s}</option>)}
              </select>
            </div>
          </div>

          <div>
            <label className="form-label">–†–∞—Å–∞</label>
            <input className="input" placeholder="—á–µ–ª–æ–≤–µ–∫"
              value={data.race} onChange={(e) => setField("race", e.target.value)} />
          </div>

          <label className="form-label">–ö—Ä–∞—Ç–∫–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è</label>
          <textarea className="input" rows={4}
            placeholder="–°–µ–º—å—è, –ø—Ä–æ–∏—Å—Ö–æ–∂–¥–µ–Ω–∏–µ, –æ–±—É—á–µ–Ω–∏–µ, —Ä–µ–¥–∫–∞—è –º–∞–≥–∏—è —Ä–æ–¥–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)‚Ä¶"
            value={data.bio} onChange={(e) => setField("bio", e.target.value)} />

          <div className="asst-actions" style={{ marginTop: 12 }}>
            <button className="btn" type="button" onClick={onCancel}>–û—Ç–º–µ–Ω–∞</button>
            <button className="btn primary" type="button" disabled={!valid1} onClick={() => setStep(2)}>–î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {/* 2) –í–Ω–µ—à–Ω–æ—Å—Ç—å */}
      {step === 2 && (
        <>
          <Hint>
            –•–æ—Ä–æ—à–æ, —Ç–µ–ø–µ—Ä—å –≤–Ω–µ—à–Ω–æ—Å—Ç—å. –ó–∞–ø–∏—à–∏ —Ä–æ—Å—Ç –∏ –≤–µ—Å ‚Äî —ç—Ç–æ –æ–±—ã—á–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Ç–≤–æ–π –æ–±–ª–∏–∫. –¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–∞–∫ —Ö—É–¥–æ—â–∞–≤–æ–µ, —Å—Ä–µ–¥–Ω–µ–µ –∏–ª–∏ –∫—Ä–µ–ø–∫–æ–µ. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–ø–∏—à–∏ –≤–æ–ª–æ—Å—ã: –∏—Ö —Ü–≤–µ—Ç –∏ –¥–ª–∏–Ω—É. –ó–∞—Ç–µ–º —Ü–≤–µ—Ç –≥–ª–∞–∑. –ê –µ—â—ë –æ—Å–æ–±—ã–µ –ø—Ä–∏–º–µ—Ç—ã ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–æ–¥–∏–Ω–∫–∏, —à—Ä–∞–º—ã, –∑–Ω–∞–∫–∏ –∏–ª–∏ —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∏. –≠—Ç–æ –≤–∞–∂–Ω–æ –Ω–µ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–Ω–∫–µ—Ç—ã, –Ω–æ –∏ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É —Ç–µ–±—è —Å–ª–æ–∂–∏–ª—Å—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –æ–±—Ä–∞–∑.
          </Hint>

          <div className="grid" style={{ gap: 10, gridTemplateColumns: "1fr 1fr 1fr" }}>
            <div>
              <label className="form-label">–†–æ—Å—Ç</label>
              <input className="input" placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, 164 —Å–º"
                value={data.height} onChange={(e) => setField("height", e.target.value)} />
            </div>
            <div>
              <label className="form-label">–í–µ—Å</label>
              <input className="input" placeholder="–Ω–∞–ø—Ä–∏–º–µ—Ä, 52 –∫–≥"
                value={data.weight} onChange={(e) => setField("weight", e.target.value)} />
            </div>
            <div>
              <label className="form-label">–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ</label>
              <select className="input" value={data.body} onChange={(e) => setField("body", e.target.value as any)}>
                {BODIES.map((b) => <option key={b} value={b}>{b}</option>)}
              </select>
            </div>
          </div>

          <div className="grid" style={{ gap: 10, gridTemplateColumns: "1fr 1fr 1fr" }}>
            <div>
              <label className="form-label">–í–æ–ª–æ—Å—ã ‚Äî —Ü–≤–µ—Ç</label>
              <input className="input" placeholder="–∫–∞—à—Ç–∞–Ω–æ–≤—ã–µ / —á—ë—Ä–Ω—ã–µ‚Ä¶"
                value={data.hairColor} onChange={(e) => setField("hairColor", e.target.value)} />
            </div>
            <div>
              <label className="form-label">–í–æ–ª–æ—Å—ã ‚Äî –¥–ª–∏–Ω–∞</label>
              <input className="input" placeholder="–∫–æ—Ä–æ—Ç–∫–∏–µ / —Å—Ä–µ–¥–Ω–∏–µ / –¥–ª–∏–Ω–Ω—ã–µ‚Ä¶"
                value={data.hairLength} onChange={(e) => setField("hairLength", e.target.value)} />
            </div>
            <div>
              <label className="form-label">–ì–ª–∞–∑–∞ ‚Äî —Ü–≤–µ—Ç</label>
              <input className="input" placeholder="–∫–∞—Ä–∏–µ / –∑–µ–ª—ë–Ω—ã–µ‚Ä¶"
                value={data.eyes} onChange={(e) => setField("eyes", e.target.value)} />
            </div>
          </div>

          <div>
            <label className="form-label">–û—Å–æ–±—ã–µ –ø—Ä–∏–º–µ—Ç—ã</label>
            <input className="input" placeholder="—à—Ä–∞–º—ã, —Ä–æ–¥–∏–Ω–∫–∏, —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∏‚Ä¶"
              value={data.marks} onChange={(e) => setField("marks", e.target.value)} />
          </div>

          <div className="asst-actions" style={{ marginTop: 12 }}>
            <button className="btn" type="button" onClick={() => setStep(1)}>–ù–∞–∑–∞–¥</button>
            <button className="btn primary" type="button" disabled={!valid2} onClick={() => setStep(3)}>–î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {/* 3) –ú–∞–≥–∏—è */}
      {step === 3 && (
        <>
          <Hint>
            –ì—Ä–∏–º—É–∞—Ä –ø–æ–ª—É—á–∞—é—Ç –≤ 13‚Äì15. –£—Ä–æ–≤–µ–Ω—å ‚Äî –Ω–æ–≤–∏—á–æ–∫. –†–∞–∑—Ä–µ—à–µ–Ω—ã –ø—Ä–æ—Å—Ç—ã–µ ¬´–≤—ã—Å—Ç—Ä–µ–ª—ã –º–∞–Ω—ã¬ª.
          </Hint>

          <label className="checkbox" style={{ display: "inline-flex", gap: 8, alignItems: "center" }}>
            <input type="checkbox" checked={data.hasGrimoire}
              onChange={(e) => setField("hasGrimoire", e.target.checked)} />
            <span>–ì—Ä–∏–º—É–∞—Ä —É–∂–µ –µ—Å—Ç—å</span>
          </label>

          {!data.hasGrimoire && (
            <div style={{ marginTop: 10 }}>
              <label className="form-label">–í–æ–∑—Ä–∞—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è (13‚Äì15)</label>
              <input className="input" type="number" min={13} max={15}
                value={data.plannedAge ?? ""}
                onChange={(e) => setField("plannedAge", Number(e.target.value))} />
            </div>
          )}

          <label className="form-label" style={{ marginTop: 10 }}>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ</label>
          <textarea className="input" rows={3}
            value={data.noviceNote}
            onChange={(e) => setField("noviceNote", e.target.value)}
            placeholder="–ù–æ–≤–∏—á–æ–∫. –†–∞–∑—Ä–µ—à–µ–Ω—ã –ø—Ä–æ—Å—Ç—ã–µ –≤—ã—Å—Ç—Ä–µ–ª—ã –º–∞–Ω—ã." />

          <div className="asst-actions" style={{ marginTop: 12 }}>
            <button className="btn" type="button" onClick={() => setStep(2)}>–ù–∞–∑–∞–¥</button>
            <button className="btn primary" type="button" disabled={!valid3} onClick={() => setStep(4)}>–î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {/* 4) –ö–ª–∞—Å—Å ‚Äî –∏–∑ –∫–∞—Ä—Ç–æ—á–µ–∫ + –µ–¥–∏–Ω–∏—á–Ω—ã–π d100 –¥–ª—è ¬´—É–Ω–∏–≤–µ—Ä—Å–∞–ª–∞¬ª */}
      {step === 4 && (
        <>
          <Hint>
            –û–ø—Ä–µ–¥–µ–ª–∏—Å—å, –∫–µ–º —Ç—ã –±—É–¥–µ—à—å –≤ –±–æ—é. –ö–ª–∞—Å—Å ‚Äî —Ç–≤–æ—è —Ä–æ–ª—å. –í—ã–±—Ä–∞–ª ‚Äî –≤—ã–ø–æ–ª–Ω—è–π.
            –ù—É, —Ç–∞–∫ –∫—Ç–æ —Ç—ã ‚Äî —â–∏—Ç, –º–µ—á –∏–ª–∏ –ø–æ–¥–º–æ–≥–∞?
          </Hint>

          <div
            className="grid"
            style={{
              gap: 8,
              gridTemplateColumns: "repeat(auto-fill, minmax(200px, 1fr))",
              alignItems: "stretch",
            }}
          >
            {classes.map((klass) => {
              const key = toKey(klass);
              const active = data.classKey === key;
              const universal = isUniversal(klass);
              const disabledUniversal =
                universalRoll !== null && universalRoll < 80 && universal;

              return (
                <button
                  key={key}
                  type="button"
                  disabled={disabledUniversal}
                  className={`confirm-card text-left ${active ? "active" : ""}`}
                  style={{
                    opacity: disabledUniversal ? 0.5 : 1,
                    cursor: disabledUniversal ? "not-allowed" : "pointer",
                    padding: 10,
                    minHeight: 64,
                  }}
                  onClick={() => !disabledUniversal && pickClass(klass)}
                >
                  <div className="confirm-title" style={{ display: "flex", gap: 8, alignItems: "center" }}>
                    <span className="truncate">{klass.name}</span>
                    {universal && (
                      <span className="pill" title="–¢—Ä–µ–±—É–µ—Ç—Å—è –æ–¥–∏–Ω –±—Ä–æ—Å–æ–∫ d100 ‚â• 80">üé≤ d100 ‚â• 80</span>
                    )}
                  </div>
                  {(klass.desc ?? klass.description ?? klass.who) && (
                    <div className="confirm-desc line-clamp-2" style={{ fontSize: 12, opacity: 0.8 }}>
                      {klass.desc ?? klass.description ?? klass.who}
                    </div>
                  )}
                </button>
              );
            })}
          </div>

          {universalRoll !== null && (
            <div className="portal-subtle" style={{ marginTop: 6 }}>
              –ò—Ç–æ–≥ –±—Ä–æ—Å–∫–∞ d100 –¥–ª—è ¬´—É–Ω–∏–≤–µ—Ä—Å–∞–ª–∞¬ª: <b>{universalRoll}</b>{" "}
              {universalRoll >= 80 ? "‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã." : "‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã."}
            </div>
          )}
          {(rollError || errors.step4) && (
            <div className="portal-error" style={{ marginTop: 6 }}>
              {rollError || "–í—ã–±–µ—Ä–∏ –∫–ª–∞—Å—Å."}
            </div>
          )}

          {pickedClass && !rollError && (
            <div className="confirm-card" style={{ marginTop: 10 }}>
              <div className="font-semibold" style={{ marginBottom: 6 }}>
                ‚úÖ –í—ã–±—Ä–∞–Ω –∫–ª–∞—Å—Å: {pickedClass.name}
              </div>
              <div style={{ fontSize: 13, lineHeight: 1.4 }}>
                {pickedClass.role && <div><b>–†–æ–ª—å:</b> {pickedClass.role}</div>}
                {Array.isArray(pickedClass.roles) && pickedClass.roles.length > 0 && (
                  <div><b>–†–æ–ª–∏:</b> {pickedClass.roles.join(", ")}</div>
                )}
                {pickedClass.complexity && <div><b>–°–ª–æ–∂–Ω–æ—Å—Ç—å:</b> {pickedClass.complexity}</div>}
                {pickedClass.who && <div><b>–ö—Ç–æ –≤—ã:</b> {pickedClass.who}</div>}
                {pickedClass.strengths && <div><b>–°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:</b> {pickedClass.strengths}</div>}
                {pickedClass.weaknesses && <div><b>–°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:</b> {pickedClass.weaknesses}</div>}
                {(pickedClass.desc ?? pickedClass.description) && (
                  <div style={{ marginTop: 6, opacity: 0.9 }}>
                    {pickedClass.desc ?? pickedClass.description}
                  </div>
                )}
              </div>
            </div>
          )}

          <div className="asst-actions" style={{ marginTop: 12 }}>
            <button className="btn" type="button" onClick={() => setStep(3)}>–ù–∞–∑–∞–¥</button>
            <button className="btn primary" type="button" disabled={!valid4} onClick={() => setStep(5)}>–î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {/* 5) –ü—Ä–∏—Ä–æ–¥–∞ –º–∞–≥–∏–∏ */}
      {step === 5 && (
        <>
          <Hint>
            –ó–∞–ø–∏—Å—ã–≤–∞–π —Å—Ç–∏—Ö–∏–∏: –æ—Ç –æ–¥–Ω–æ–π –¥–æ —á–µ—Ç—ã—Ä—ë—Ö. –ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ –¥–æ–ø—É—Å—Ç–∏–º—ã ‚Äî –û–≥–æ–Ω—å+–ó–µ–º–ª—è=–õ–∞–≤–∞, –í–æ–¥–∞+–í–æ–∑–¥—É—Ö=–õ—ë–¥.
          </Hint>

          {/* —Å—á—ë—Ç—á–∏–∫ –∏ –ª–∏–º–∏—Ç */}
          <div className="portal-subtle" style={{ marginBottom: 6 }}>
            –í—ã–±—Ä–∞–Ω–æ —Å—Ç–∏—Ö–∏–π: <b>{data.elements.length}</b> –∏–∑ 4
          </div>

          <div className="chips">
            {ELEMENTS.map((el) => {
              const on = data.elements.includes(el);
              const limitReached = !on && data.elements.length >= 4;
              return (
                <button
                  key={el}
                  type="button"
                  className={`chip ${on ? "on" : ""}`}
                  aria-pressed={on}
                  aria-label={`${on ? "–°–Ω—è—Ç—å" : "–í—ã–±—Ä–∞—Ç—å"} —Å—Ç–∏—Ö–∏—é ${el}`}
                  title={on ? `–°–Ω—è—Ç—å —Å—Ç–∏—Ö–∏—é: ${el}` : (limitReached ? "–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç 4" : `–í—ã–±—Ä–∞—Ç—å —Å—Ç–∏—Ö–∏—é: ${el}`)}
                  disabled={limitReached}
                  onClick={() => toggleElement(el)}
                >
                  {el}
                </button>
              );
            })}
          </div>

          {errors.step5 && <div className="portal-error" style={{ marginTop: 6 }}>{errors.step5}</div>}

          <div className="asst-actions" style={{ marginTop: 12 }}>
            <button className="btn" type="button" onClick={() => setStep(4)}>–ù–∞–∑–∞–¥</button>
            <button className="btn primary" type="button" disabled={!valid5} onClick={() => setStep(6)}>–î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {/* 6) –ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è */}
      {step === 6 && (
        <>
          <Hint>
            –ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è! –ù–∞ —Å—Ç–∞—Ä—Ç–µ 1‚Äì3 —à—Ç—É–∫–∏. –ù–∞–∑–≤–∞–Ω–∏–µ, –≤—Ä–µ–º—è –∫–∞—Å—Ç–∞, —Ä–∞–¥–∏—É—Å, —ç—Ñ—Ñ–µ–∫—Ç –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å.
          </Hint>

          {data.spells.map((s, i) => (
            <div key={i} className="confirm-card" style={{ marginBottom: 10 }}>
              <div className="grid" style={{ gap: 10, gridTemplateColumns: "1fr 1fr" }}>
                <div>
                  <label className="form-label">–ù–∞–∑–≤–∞–Ω–∏–µ</label>
                  <input className="input" value={s.name}
                    onChange={(e) => updateSpell(i, { name: e.target.value })} placeholder="–û–≥–Ω–µ–Ω–Ω–∞—è —Å—Ç—Ä–µ–ª–∞" />
                </div>
                <div>
                  <label className="form-label">–í—Ä–µ–º—è –∫–∞—Å—Ç–∞</label>
                  <input className="input" value={s.castTime}
                    onChange={(e) => updateSpell(i, { castTime: e.target.value })} placeholder="1 —Ö–æ–¥" />
                </div>
              </div>

              <div className="grid" style={{ gap: 10, gridTemplateColumns: "1fr 1fr" }}>
                <div>
                  <label className="form-label">–†–∞–¥–∏—É—Å</label>
                  <input className="input" value={s.radius}
                    onChange={(e) => updateSpell(i, { radius: e.target.value })} placeholder="10 –º" />
                </div>
                <div>
                  <label className="form-label">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</label>
                  <input className="input" value={s.duration}
                    onChange={(e) => updateSpell(i, { duration: e.target.value })} placeholder="—Ä–∞–∑–æ–≤–æ / 2 —Ö–æ–¥–∞" />
                </div>
              </div>

              <div>
                <label className="form-label">–≠—Ñ—Ñ–µ–∫—Ç</label>
                <input className="input" value={s.effect}
                  onChange={(e) => updateSpell(i, { effect: e.target.value })} placeholder="–æ–∂–æ–≥ —Ü–µ–ª–∏ / –º–∞–ª—ã–π —â–∏—Ç" />
              </div>

              <div className="asst-actions" style={{ marginTop: 8 }}>
                <button className="btn" type="button" onClick={addSpell} disabled={data.spells.length >= 3}>+ –î–æ–±–∞–≤–∏—Ç—å</button>
                <button className="btn danger" type="button" onClick={() => removeSpell(i)} disabled={data.spells.length <= 1}>–£–¥–∞–ª–∏—Ç—å</button>
              </div>
            </div>
          ))}

          {!valid6 && <div className="portal-error">–ù—É–∂–Ω–æ 1‚Äì3 –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è, –≤—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.</div>}

          <div className="asst-actions" style={{ marginTop: 12 }}>
            <button className="btn" type="button" onClick={() => setStep(5)}>–ù–∞–∑–∞–¥</button>
            <button className="btn primary" type="button" disabled={!valid6} onClick={() => setStep(7)}>–î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {/* 7) –°–∏—Å—Ç–µ–º–∞ –±–æ—è */}
      {step === 7 && (
        <>
          <Hint>
            –ó–∞–≤–µ—Ä—à–∞–µ–º –∞–Ω–∫–µ—Ç—É —Å–∏—Å—Ç–µ–º–æ–π –±–æ—è. –ö–∞–∂–¥—ã–π –±–æ–π –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –±—Ä–æ—Å–∫–∏ –∫—É–±–æ–≤. –ò–≥—Ä–æ–∫ –∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫ –±—Ä–æ—Å–∞—é—Ç –∏—Ö, –∞ –∑–∞—Ç–µ–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø—Ä–∏–±–∞–≤–ª—è—é—Ç –±–æ–Ω—É—Å—ã –æ—Ç –∫–ª–∞—Å—Å–∞, –º–∞–≥–∏–∏ –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –ó–∞–∫–ª–∏–Ω–∞–Ω–∏—è –º–æ–≥—É—Ç –Ω–∞–∫–ª–∞–¥—ã–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç—ã ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–∂–æ–≥, –ª–µ—á–µ–Ω–∏–µ –∏–ª–∏ –∑–∞—â–∏—Ç–Ω—ã–π –±–∞—Ä—å–µ—Ä. –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –∏–∑ —á–∏—Å–ª–∞ –Ω–∞ –∫—É–±–∏–∫–µ –∏ —Ç–≤–æ–∏—Ö –±–æ–Ω—É—Å–æ–≤. –ü–æ–±–µ–∂–¥–∞–µ—Ç —Ç–æ—Ç, —É –∫–æ–≥–æ —Å—É–º–º–∞ –≤—ã—à–µ. –í—Å—ë —á–µ—Å—Ç–Ω–æ –∏ –ø—Ä–æ—Å—Ç–æ ‚Äî –≥–ª–∞–≤–Ω–æ–µ –ø–æ–º–Ω–∏—Ç—å, —á—Ç–æ –∫–∞–∂–¥–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ö–æ–¥ –±–æ—è.
          </Hint>

          <div className="portal-subtle" style={{ marginTop: 6 }}>
            –≠—Ç–æ –ø–æ—è—Å–Ω–µ–Ω–∏—è. –ü–æ—Å–ª–µ –Ω–∏—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø–æ—è–≤–∏—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∫–∞ ¬´—Å–æ–≤–∏–Ω–æ–π –ø–æ—á—Ç–æ–π¬ª.
          </div>

          <div className="asst-actions" style={{ marginTop: 14 }}>
            <button className="btn" type="button" onClick={() => setStep(6)}>–ù–∞–∑–∞–¥</button>
            <button className="btn primary" type="button" onClick={() => setStep(8)}>–î–∞–ª–µ–µ</button>
          </div>
        </>
      )}

      {/* 8) –§–æ—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ */}
      {step === 8 && (
        <>
          <Hint>
            –¢—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤–∞—à–µ —Ñ–æ—Ç–æ (–ø–æ—Ä—Ç—Ä–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞). –ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî –æ–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—Å—è –∫ –∞–Ω–∫–µ—Ç–µ –∏ —É–π–¥—ë—Ç –≤–º–µ—Å—Ç–µ —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è PNG/JPG –¥–æ 5 –ú–ë.
          </Hint>

          <div className="grid" style={{ gap: 12, gridTemplateColumns: "1fr 1fr" }}>
            <div>
              <label className="form-label">–§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</label>
              <input
                type="file"
                accept="image/*"
                onChange={onPickPhoto}
                className="input"
              />
              <div className="portal-subtle" style={{ marginTop: 6 }}>
                –°–æ–≤–µ—Ç—ã: —Ä–æ–≤–Ω—ã–π –∫–∞–¥—Ä, –ª–∏—Ü–æ/–º–∞—Å–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –±–µ–∑ –ª–∏—à–Ω–µ–≥–æ —Ñ–æ–Ω–∞; 512‚Äì2048 px –ø–æ —à–∏—Ä–∏–Ω–µ.
              </div>
            </div>

            <div>
              <label className="form-label">–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä</label>
              <div
                style={{
                  width: "100%",
                  aspectRatio: "1 / 1",
                  border: "1px dashed rgba(255,255,255,0.3)",
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  overflow: "hidden",
                  borderRadius: 8,
                  background: "rgba(255,255,255,0.04)"
                }}
              >
                {photoDataUrl ? (
                  <img
                    src={photoDataUrl}
                    alt="–§–æ—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"
                    style={{ width: "100%", height: "100%", objectFit: "cover" }}
                  />
                ) : (
                  <div className="portal-subtle" style={{ padding: 12, textAlign: "center" }}>
                    –ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è –≤–∞—à –ø–æ—Ä—Ç—Ä–µ—Ç.<br />–ü–æ–∫–∞ —á—Ç–æ —Ñ–æ—Ç–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ.
                  </div>
                )}
              </div>
            </div>
          </div>

          <div className="asst-actions" style={{ marginTop: 14 }}>
            <button className="btn" type="button" onClick={() => setStep(7)}>–ù–∞–∑–∞–¥</button>
            <button className="btn primary" type="button" onClick={submit}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          </div>
        </>
      )}
    </div>
  );
}
